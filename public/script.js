// ===== GLASS XO v2.0 - –ì–õ–ê–í–ù–´–ô –ú–û–î–£–õ–¨ =====

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
import { AdminPanel } from './modules/adminPanel.js';
import { GameLogic } from './modules/gameLogic.js';
import { UIManager } from './modules/ui.js';
import { SocketManager } from './modules/socket.js';
import { EffectsManager } from './modules/effects.js';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –∏–≥—Ä—ã
window.GlassXO = {
    adminPanel: null,
    gameLogic: null,
    ui: null,
    socket: null,
    effects: null,
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã
    settings: {
        soundEnabled: true,
        musicEnabled: false,
        darkTheme: false,
        animationsEnabled: true,
        autoSave: true,
        showHints: false
    },
    
    // –î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
    player: {
        nickname: '–ì–æ—Å—Ç—å',
        avatar: 'icons/gameIcons/PNG/Black/1x/button1.png',
        level: 1,
        winRate: 0,
        gamesPlayed: 0,
        winStreak: 0,
        isGuest: true,
        isAdmin: false
    },
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    gameState: {
        board: Array(9).fill(null),
        currentPlayer: 'X',
        gameMode: 'local',
        gameActive: true,
        isMyTurn: false,
        mySymbol: null,
        opponent: null,
        gameStartTime: null,
        moveCount: 0,
        difficulty: 'medium',
        roomCode: null
    },
    
    // –û–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    onlineStats: {
        playersOnline: 0,
        activeGames: 0,
        totalMessages: 0
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', async () => {
    console.log('üéÆ Glass XO v2.0 - –ú–æ–¥—É–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
    
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
        window.GlassXO.ui = new UIManager();
        window.GlassXO.effects = new EffectsManager();
        window.GlassXO.socket = new SocketManager();
        window.GlassXO.gameLogic = new GameLogic();
        window.GlassXO.adminPanel = new AdminPanel();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        loadGameData();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏
        setupModuleIntegration();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        await startLoadingSequence();
        
        console.log('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        window.GlassXO.ui.showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä—ã', 'error');
    }
});

// –ó–∞–≥—Ä—É–∑–æ—á–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
async function startLoadingSequence() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
    window.GlassXO.ui.showScreen('loading-screen');
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
    document.getElementById('loading-screen').classList.remove('active');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –Ω–∏–∫
    const savedNickname = localStorage.getItem('playerNickname');
    if (savedNickname) {
        window.GlassXO.player.nickname = savedNickname;
        window.GlassXO.ui.showScreen('main-menu');
        window.GlassXO.ui.updatePlayerProfile();
        } else {
        window.GlassXO.ui.showScreen('auth-screen');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function loadGameData() {
    try {
        const savedSettings = localStorage.getItem('gameSettings');
        if (savedSettings) {
            window.GlassXO.settings = { ...window.GlassXO.settings, ...JSON.parse(savedSettings) };
        }
        
        const savedPlayerData = localStorage.getItem('playerData');
        if (savedPlayerData) {
            window.GlassXO.player = { ...window.GlassXO.player, ...JSON.parse(savedPlayerData) };
        }
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        applySettings();
        
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function applySettings() {
    const settings = window.GlassXO.settings;
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ–∫–±–æ–∫—Å–æ–≤
    document.getElementById('sound-enabled').checked = settings.soundEnabled;
    document.getElementById('music-enabled').checked = settings.musicEnabled;
    document.getElementById('dark-theme').checked = settings.darkTheme;
    document.getElementById('animations-enabled').checked = settings.animationsEnabled;
    document.getElementById('auto-save').checked = settings.autoSave;
    document.getElementById('show-hints').checked = settings.showHints;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
    window.GlassXO.ui.toggleTheme(settings.darkTheme);
    
    // –ê–Ω–∏–º–∞—Ü–∏–∏
    if (!settings.animationsEnabled) {
        document.body.classList.add('no-animations');
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
window.GlassXO.saveGameData = function() {
    if (window.GlassXO.settings.autoSave) {
        localStorage.setItem('gameSettings', JSON.stringify(window.GlassXO.settings));
        localStorage.setItem('playerData', JSON.stringify(window.GlassXO.player));
    }
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
window.GlassXO.utils = {
    formatTime: (seconds) => {
        const minutes = Math.floor(seconds / 60);
        const secs = seconds % 60;
        return `${minutes}:${secs.toString().padStart(2, '0')}`;
    },
    
    generateId: () => Math.random().toString(36).substr(2, 9),
    
    debounce: (func, wait) => {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è HTML onclick
window.closeModal = (modalId) => {
    if (window.GlassXO.ui) {
        window.GlassXO.ui.closeModal(modalId);
    }
};

window.showScreen = (screenId) => {
    if (window.GlassXO.ui) {
        window.GlassXO.ui.showScreen(screenId);
    }
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π
function setupModuleIntegration() {
    // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —Å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å—é
    if (window.GlassXO.adminPanel && window.GlassXO.effects) {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –≤ —ç—Ñ—Ñ–µ–∫—Ç–∞—Ö
        window.GlassXO.adminPanel.effectsManager = window.GlassXO.effects;
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–∫–µ—Ç–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ (—Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —Å–æ–∫–µ—Ç–æ–≤)
    setTimeout(() => {
        if (window.GlassXO.effects && window.GlassXO.effects.setupSocketHandlers) {
            window.GlassXO.effects.setupSocketHandlers();
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        if (window.GlassXO.adminPanel && window.GlassXO.socket) {
            setupAdminSocketHandlers();
        }
    }, 2000);
    
    console.log('üîó –ú–æ–¥—É–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Å–æ–∫–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
function setupAdminSocketHandlers() {
    if (!window.GlassXO.socket || !window.GlassXO.socket.socket) return;
    
    const socket = window.GlassXO.socket.socket;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ
    socket.on('admin_users_list', (users) => {
        if (window.GlassXO.adminPanel) {
            window.GlassXO.adminPanel.updateUsersList(users);
        }
    });
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –∞–¥–º–∏–Ω–∫–µ
    socket.on('admin_stats_update', (stats) => {
        if (window.GlassXO.adminPanel) {
            window.GlassXO.adminPanel.updateStats(stats);
        }
    });
    
    console.log('üî• –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å–æ–∫–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

console.log('üöÄ Glass XO Core –∑–∞–≥—Ä—É–∂–µ–Ω'); 