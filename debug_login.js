#!/usr/bin/env node

import fetch from 'node-fetch';

const API_URL = 'http://localhost:3000';

async function testLogin() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞...');
    
    const loginData = {
        login: 'admin',
        password: 'admin123'
    };

    try {
        const response = await fetch(`${API_URL}/api/auth/login`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(loginData)
        });

        const data = await response.json();
        
        console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
        console.log('üìã –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);
        
        if (data.success && data.token) {
            console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', data.token);
            
            // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–æ–∫–µ–Ω
            console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞...');
            
            const verifyResponse = await fetch(`${API_URL}/api/auth/verify`, {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${data.token}`
                }
            });

            const verifyData = await verifyResponse.json();
            
            console.log('üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏:', verifyResponse.status);
            console.log('üìã –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:', verifyData);
            
        } else {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    }
}

testLogin(); 