// –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã –≤—Ö–æ–¥–∞
import fetch from 'node-fetch';

const SERVER_URL = 'http://localhost:3000';

async function debugLoginIssue() {
    console.log('üîç –û–¢–õ–ê–î–ö–ê –ü–†–û–ë–õ–ï–ú–´ –í–•–û–î–ê\n');

    try {
        // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
        console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞...');
        const healthResponse = await fetch(`${SERVER_URL}/api/health`);
        const healthData = await healthResponse.json();
        console.log(`–°–µ—Ä–≤–µ—Ä: ${healthData.status === 'ok' ? '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' : '‚ùå –ü—Ä–æ–±–ª–µ–º—ã'}\n`);

        // –ü–æ–ø—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        console.log('2. –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
        const loginAttempt = {
            login: 'vitaliklord1996@gmail.com', // –ò–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
            password: 'testpassword' // –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        };

        console.log(`–ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –∫–∞–∫: ${loginAttempt.login}`);
        
        const loginResponse = await fetch(`${SERVER_URL}/api/auth/login`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(loginAttempt),
        });

        console.log(`–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${loginResponse.status}`);
        
        const loginData = await loginResponse.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', loginData);

        if (!loginData.success) {
            console.log('\n‚ùå –û–®–ò–ë–ö–ê –í–•–û–î–ê');
            console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
            console.log('- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å');
            console.log('- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
            console.log('- –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö');
            
            // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            console.log('\n3. –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
            const newUser = {
                username: 'debuguser',
                email: 'debug@test.com',
                password: 'debugpass123'
            };

            const regResponse = await fetch(`${SERVER_URL}/api/auth/register`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(newUser),
            });

            const regData = await regResponse.json();
            console.log(`–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${regData.success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}`);
            
            if (regData.success) {
                // –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                console.log('\n4. –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
                const newLoginResponse = await fetch(`${SERVER_URL}/api/auth/login`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        login: newUser.email,
                        password: newUser.password,
                    }),
                });

                const newLoginData = await newLoginResponse.json();
                console.log(`–ù–æ–≤—ã–π –≤—Ö–æ–¥: ${newLoginData.success ? '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç!' : '‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è'}`);
                console.log('–û—Ç–≤–µ—Ç:', newLoginData);
            }
        } else {
            console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
debugLoginIssue(); 