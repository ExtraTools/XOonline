import express from 'express';
import { userQueries } from '../database/database.js';

const router = express.Router();

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
router.get('/users', async (req, res) => {
    try {
        console.log('üõ°Ô∏è Admin: –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        
        const users = await userQueries.getAllUsers();
        
        res.json({
            success: true,
            users: users,
            message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ'
        });
        
        console.log('‚úÖ Admin: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', users.length);
        
    } catch (error) {
        console.error('‚ùå Admin: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
        });
    }
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–º–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
router.post('/screamer', async (req, res) => {
    try {
        const { target } = req.body;
        
        if (!target) {
            return res.status(400).json({
                success: false,
                message: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ü–µ–ª—å (email –∏–ª–∏ username)'
            });
        }
        
        console.log('üëª Admin: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–º–µ—Ä–∞ –¥–ª—è:', target);
        
        // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await userQueries.findByLogin(target);
        
        if (!user) {
            return res.status(404).json({
                success: false,
                message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
            });
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º "—Å–∫—Ä–∏–º–µ—Ä" –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        global.screamerTargets = global.screamerTargets || new Set();
        global.screamerTargets.add(user.id);
        
        console.log('üéÉ Admin: –°–∫—Ä–∏–º–µ—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è:', user.username);
        
        res.json({
            success: true,
            message: `–°–∫—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.username}`,
            target: user.username
        });
        
    } catch (error) {
        console.error('‚ùå Admin: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∫—Ä–∏–º–µ—Ä–∞:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∫—Ä–∏–º–µ—Ä–∞'
        });
    }
});

// –°–±—Ä–æ—Å –≤—Å–µ—Ö –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–æ–≤ (–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–≤–∏—Å—à–∏—Ö —Å–µ—Å—Å–∏–π)
router.post('/reset-online', async (req, res) => {
    try {
        console.log('üõ°Ô∏è Admin: –°–±—Ä–æ—Å –≤—Å–µ—Ö –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–æ–≤');
        
        await userQueries.resetAllOnlineStatus();
        
        res.json({
            success: true,
            message: '–í—Å–µ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å—ã —Å–±—Ä–æ—à–µ–Ω—ã'
        });
        
        console.log('‚úÖ Admin: –û–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å—ã —Å–±—Ä–æ—à–µ–Ω—ã');
        
    } catch (error) {
        console.error('‚ùå Admin: –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–æ–≤:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å—Ç–∞—Ç—É—Å–æ–≤'
        });
    }
});

export default router; 