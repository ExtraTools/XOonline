#!/usr/bin/env node

/**
 * Database Seed Script
 * –ó–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 */

import { initDatabase } from '../server/database/database.js';
import User from '../server/models/User.js';
import LauncherProfile from '../server/models/LauncherProfile.js';
import MinecraftServer from '../server/models/MinecraftServer.js';
import winston from 'winston';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
const logger = winston.createLogger({
    level: 'info',
    format: winston.format.combine(
        winston.format.timestamp(),
        winston.format.colorize(),
        winston.format.simple()
    ),
    transports: [
        new winston.transports.Console()
    ]
});

async function seedDatabase() {
    logger.info('üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
    
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await initDatabase();
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        logger.info('üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
        
        const testUsers = [
            {
                username: 'steve',
                email: 'steve@minecraft.com',
                password: 'password123',
                displayName: 'Steve Crafter'
            },
            {
                username: 'alex',
                email: 'alex@minecraft.com', 
                password: 'password123',
                displayName: 'Alex Builder'
            },
            {
                username: 'herobrine',
                email: 'herobrine@minecraft.com',
                password: 'password123',
                displayName: 'Herobrine Legend'
            }
        ];

        const users = [];
        for (const userData of testUsers) {
            try {
                const user = await User.create(userData);
                users.push(user);
                logger.info(`   ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.username}`);
            } catch (error) {
                if (error.message.includes('—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')) {
                    logger.warn(`   ‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
                    const existingUser = await User.findByUsername(userData.username);
                    users.push(existingUser);
                } else {
                    throw error;
                }
            }
        }

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
        logger.info('üéÆ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π...');
        
        const profilesData = [
            {
                name: 'Vanilla 1.21.6',
                description: '–ß–∏—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è Minecraft –±–µ–∑ –º–æ–¥–æ–≤',
                minecraftVersion: '1.21.6',
                modLoader: 'vanilla',
                memoryAllocation: 4096
            },
            {
                name: 'Modded Fabric',
                description: '–ü—Ä–æ—Ñ–∏–ª—å —Å –º–æ–¥–∞–º–∏ –Ω–∞ Fabric',
                minecraftVersion: '1.21.6',
                modLoader: 'fabric',
                memoryAllocation: 6144
            },
            {
                name: 'Forge Adventure',
                description: '–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å —Å –º–æ–¥–∞–º–∏',
                minecraftVersion: '1.20.4',
                modLoader: 'forge',
                memoryAllocation: 8192
            },
            {
                name: 'Old School',
                description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –Ω–æ—Å—Ç–∞–ª—å–≥–∏–∏',
                minecraftVersion: '1.19.4',
                modLoader: 'vanilla',
                memoryAllocation: 2048
            }
        ];

        for (const user of users) {
            for (const profileData of profilesData) {
                try {
                    const profile = await LauncherProfile.create(user.id, profileData);
                    logger.info(`   ‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å: ${profile.name} –¥–ª—è ${user.username}`);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–æ–¥—ã –¥–ª—è modded –ø—Ä–æ—Ñ–∏–ª–µ–π
                    if (profileData.modLoader !== 'vanilla') {
                        await addTestMods(profile, profileData.modLoader);
                    }
                } catch (error) {
                    logger.warn(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è ${profileData.name}: ${error.message}`);
                }
            }
        }

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–µ—Ä–≤–µ—Ä—ã
        logger.info('üåê –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤...');
        
        const serversData = [
            {
                name: 'Hypixel',
                address: 'mc.hypixel.net',
                port: 25565,
                tags: ['minigames', 'popular', 'bedwars']
            },
            {
                name: '2b2t',
                address: '2b2t.org',
                port: 25565,
                tags: ['anarchy', 'survival', 'oldest']
            },
            {
                name: 'Mineplex',
                address: 'us.mineplex.com',
                port: 25565,
                tags: ['minigames', 'arcade', 'cakewars']
            },
            {
                name: 'CubeCraft',
                address: 'play.cubecraft.net',
                port: 25565,
                tags: ['minigames', 'eggwars', 'skywars']
            }
        ];

        for (const user of users.slice(0, 2)) { // –¢–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            for (const serverData of serversData) {
                try {
                    const server = await MinecraftServer.addToFavorites(user.id, serverData);
                    logger.info(`   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–µ—Ä–≤–µ—Ä: ${server.name} –¥–ª—è ${user.username}`);
                } catch (error) {
                    logger.warn(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ ${serverData.name}: ${error.message}`);
                }
            }
        }

        logger.info('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
        logger.info('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        logger.info(`   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
        logger.info(`   ‚Ä¢ –ü—Ä–æ—Ñ–∏–ª–µ–π: ${users.length * profilesData.length}`);
        logger.info(`   ‚Ä¢ –°–µ—Ä–≤–µ—Ä–æ–≤: ${2 * serversData.length}`);
        
        logger.info('\nüîë –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:');
        testUsers.forEach(user => {
            logger.info(`   ‚Ä¢ ${user.username} / ${user.password}`);
        });

        process.exit(0);
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
        process.exit(1);
    }
}

async function addTestMods(profile, modLoader) {
    const modsData = {
        fabric: [
            {
                modId: 'sodium',
                modName: 'Sodium',
                modVersion: '0.5.8',
                modSource: 'modrinth',
                fileName: 'sodium-fabric-0.5.8+mc1.21.jar'
            },
            {
                modId: 'iris',
                modName: 'Iris Shaders',
                modVersion: '1.7.0',
                modSource: 'modrinth',
                fileName: 'iris-1.7.0+mc1.21.jar',
                dependencies: ['sodium']
            },
            {
                modId: 'lithium',
                modName: 'Lithium',
                modVersion: '0.12.1',
                modSource: 'modrinth',
                fileName: 'lithium-fabric-0.12.1+mc1.21.jar'
            }
        ],
        forge: [
            {
                modId: 'jei',
                modName: 'Just Enough Items',
                modVersion: '15.2.0.27',
                modSource: 'curseforge',
                fileName: 'jei-1.20.4-15.2.0.27.jar'
            },
            {
                modId: 'iron-chests',
                modName: 'Iron Chests',
                modVersion: '1.20.4-14.4.4',
                modSource: 'curseforge',
                fileName: 'ironchests-1.20.4-14.4.4.jar'
            },
            {
                modId: 'journeymap',
                modName: 'JourneyMap',
                modVersion: '5.9.7',
                modSource: 'curseforge',
                fileName: 'journeymap-1.20.4-5.9.7-fabric.jar'
            }
        ]
    };

    const mods = modsData[modLoader] || [];
    
    for (const modData of mods) {
        try {
            await profile.addMod(modData);
        } catch (error) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–æ–≤ –≤ seed
        }
    }
}

// –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
seedDatabase();